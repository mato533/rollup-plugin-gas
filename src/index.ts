import { type Plugin } from "rollup";
import { generate } from "gas-entry-generator";

const defaultOptions = {
  comment: false,
  autoGlobalExports: false,
  exportsIdentifierName: "exports",
  globalIdentifierName: "global",
};

const rollupPluginGas = (options?: PluginOption): Plugin => {
  const configratedOptions = Object.assign({}, defaultOptions, options);
  const entryPointFunctions: Array<string> = [];
  return {
    name: "rollup-plugin-gas",
    options(options) {
      options.treeshake = false;
      return options;
    },
    outputOptions(options) {
      options.format = "umd"; // cjs
      return options;
    },
    transform(code) {
      const gasCode = generate(code, configratedOptions);
      if (gasCode.entryPointFunctions) {
        const codes = String(gasCode.entryPointFunctions).replace(/\n/g, "");
        codes.split("}").forEach((code) => {
          if (code) {
            entryPointFunctions.push(`${code}};`);
          }
        });
      }
    },
    banner() {
      return [
        "/** Generated By rollup-plugin-gas -- START **/",
        "var global = this;",
        ...entryPointFunctions,
        "/** Generated By rollup-plugin-gas -- END   **/",
      ].join("\n");
    },
  };
};

export default rollupPluginGas;
