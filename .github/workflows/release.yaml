name: CD
run-name: "Execute release tasks for ${{ github.head_ref }}"
on:
  push:
    branches:
      - master
    tags:
      - "!*"

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GH_USER: "github-actions[bot]"

jobs:
  prepare:
    name: Prepare for the release job
    if: "${{ startsWith(github.event.head_commit.message, 'release:') }}"
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.identify-version.outputs.app_version }}
      app_version_text: ${{ steps.identify-version.outputs.app_version_text }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"

      - name: Identify the version about to release
        id: identify-version
        run: |
          APP_VERSION="$(cat ./package.json |jq .version|sed -e 's/"//g'| head -n1)"
          if [ ! -n "${APP_VERSION}" ]; then
            exit 255
          fi
          echo "app_version=${APP_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "app_version_text=v${APP_VERSION}" >>"${GITHUB_OUTPUT}"

  test:
    name: Test & build
    needs:
      - prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run the test
        run: yarn run test

      - name: Run the test for typescripts
        run: yarn run test:ts

      - name: Run the test for build
        run: yarn run build

  publish:
    name: Publish to the NPM registry
    needs:
      - prepare
      - test
    runs-on: ubuntu-latest
    environment: npm
      permissions:
        contents: read
        id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run the build
        run: |
          yarn run build

      - name: Publish
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  coverage:
    name: Upload the coverage
    needs:
      - prepare
      - test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run the coverage
        run: yarn run coverage

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          verbose: true

  tag:
    name: Add the tag for the released version
    needs:
      - prepare
      - test
      - publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"

      - name: Set Github user informations.
        run: |
          git config --local user.email "${{ env.GH_EMAIL }}"
          git config --local user.name "${{ env.GH_USER }}"

      - name: Add the release tag
        run: |
          git tag ${{ needs.prepare.outputs.app_version_text }}
          git push origin ${{ needs.prepare.outputs.app_version_text }}
